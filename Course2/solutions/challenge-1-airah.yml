
Description: A template that provisions an EC2 instance with configuration to deploy it to an Apache web server

Parameters:
  EnvironmentName:
    Description: Environment name
    Type: String
    Default: Challenge-1 Solution
  VpcCIDR:
    Description: CIDR block for the VPC
    Type: String
    Default: 130.10.0.0/16
  SubnetCIDR:
    Description: CIDR block for the Subnet
    Type: String
    Default: 130.10.1.0/24
  LinuxAMI:
    Description: AMI for the EC2 instance
    Type: String

Resources:
  Challenge1Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC

  Challenge1Gateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Internet Gateway

  Challenge1VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref Challenge1Gateway
      VpcId: !Ref Challenge1Vpc

  Challenge1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: "true"
      AvailabilityZone: us-east-1a
      VpcId: !Ref Challenge1Vpc
      CidrBlock: !Ref SubnetCIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Subnet
  
  Challenge1SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for challenge 1
      VpcId: !Ref Challenge1Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} SG

  Challenge2Key:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: Challenge2Key
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Key pair

  DefaultPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Challenge1Vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} PU RT

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DefaultPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Challenge1Gateway

  PublicRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref DefaultPublicRouteTable
      SubnetId: !Ref Challenge1Subnet
  
  Challenge1Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      ImageId: !Ref LinuxAMI
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref Challenge1SG
          SubnetId: !Ref Challenge1Subnet
      KeyName: !Ref Challenge2Key
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          cd /var/www/html
          echo "Udacity 1st Demo Web Server Up and Running!" > index.html

Outputs:
  PublicUrl:
    Description: address to check
    Value: !GetAtt Challenge1Instance.PublicIp
