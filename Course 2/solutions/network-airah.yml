Parameters:
  EnvironmentName:
    Description: Environment name?
    Type: String
    Default: C2L3
  VpcCIDR:
    Description: CIDR block for the VPC?
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Description: Specify CIDR block for public subnet 1
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet2CIDR:
    Description: Specify CIDR block for public subnet 2
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1CIDR:
    Description: Specify CIDR block for private subnet 1
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnet2CIDR:
    Description: Specify CIDR block for private subnet 2
    Type: String
    Default: 10.0.3.0/24 

Resources:
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  
  VPCInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway1
      VpcId: !Ref VPC1

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet 1
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet 2
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet 1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet 2
  
  MyEIP1:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyEIP 1

  MyEIP2:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyEIP 2
  
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public route table
  
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} private route table 1
  
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} private route table 2

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway1

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PublicSubnetRTAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnetRTAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateSubnetRTAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnetRTAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

Outputs:
  VpcId:
    Description: ID of the created VPC
    Value: !Ref VPC1
    Export:
      Name: !Sub ${EnvironmentName}-VPC-ID 
  InternetGatewayId:
    Description: ID of the internet gateway
    Value: !Ref InternetGateway1
    Export:
      Name: !Sub ${EnvironmentName}-IG-ID 
  VpcGatewayAttachmentId:
    Description: ID of the gateway attachment
    Value: !Ref VPCInternetGatewayAttachment
    Export:
      Name: !Sub ${EnvironmentName}-GA-ID 
  PubSubId1:
    Description: Public subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PUSU1-ID
  PubSubId2:
    Description: Public subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PUSU2-ID
  PriSubId1:
    Description: Private subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PRSU1-ID
  PriSubId2:
    Description: Private subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PRSU2-ID
  AllPrSubnets:
    Description: list of Private subnet IDs
    Value: 
      Fn::Join: [", ", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PR-SUBNETS
  AllPuSubnets:
    Description: list of public subnet IDs
    Value: 
      Fn::Join: [", ", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PU-SUBNETS
  EipId1:
    Description: ID of Elastic IP address 1
    Value: !Ref MyEIP1
    Export:
      Name: !Sub ${EnvironmentName}-EIP1-ID
  EipId2:
    Description: ID of Elastic IP address 2
    Value: !Ref MyEIP2
    Export:
      Name: !Sub ${EnvironmentName}-EIP2-ID
  NatId1:
    Description: ID of NAT gateway 1
    Value: !Ref NatGateway1
    Export:
      Name: !Sub ${EnvironmentName}-NAT-GW1-ID
  NatId2:
    Description: ID of NAT gateway 2
    Value: !Ref NatGateway2
    Export:
      Name: !Sub ${EnvironmentName}-NAT-GW2-ID
